{"version":3,"sources":["componentes/AgregarCita.js","actions/validarActions.js","actions/citasActions.js","componentes/ListadoCitas.js","reducers/citasReducer.js","reducers/validacionReducer.js","reducers/index.js","store.js","localstorage.js","App.js","serviceWorker.js","index.js"],"names":["AgregarCita","_useState","useState","_useState2","Object","slicedToArray","mascota","guardarMascota","_useState3","_useState4","propietario","guardarPropietario","_useState5","_useState6","fecha","guardarFecha","_useState7","_useState8","hora","guardarHora","_useState9","_useState10","sintomas","guardarSintomas","dispatch","useDispatch","validarFormulario","estado","type","payload","validarFormularioAction","error","useSelector","state","react_default","a","createElement","className","onSubmit","e","cita","preventDefault","trim","id","uuid","agregarCitaAction","placeholder","value","onChange","target","ListadoCitas","citas","mensaje","keys","length","map","key","onClick","initialState","combineReducers","arguments","undefined","action","objectSpread","concat","toConsumableArray","filter","storageState","citasStorage","localStorage","getItem","JSON","parse","obtenerStateStorage","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","citasState","stringify","setItem","guardarStateStorage","getState","App","es","componentes_AgregarCita","componentes_ListadoCitas","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5bc5d3b9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { agregarCitaAction } from '../actions/citasActions';\nimport { validarFormularioAction } from '../actions/validarActions';\nimport uuid from 'uuid/v4';\n\nconst AgregarCita = () => {\n\n    // State del componente\n    const [ mascota, guardarMascota ] = useState('');\n    const [ propietario, guardarPropietario ] = useState('');\n    const [ fecha, guardarFecha ] = useState('');\n    const [ hora, guardarHora ] = useState('');\n    const [ sintomas, guardarSintomas ] = useState('');\n\n    // Dispatch para ejecutar nuestras acciones\n    const dispatch = useDispatch();\n    const agregarNuevaCita = (cita) => dispatch( agregarCitaAction(cita) );\n    const validarFormulario = (estado) => dispatch( validarFormularioAction(estado) );\n\n    // useSelector es similar a mapStateToProps en Hooks\n    const error = useSelector( ( state )  => state.error);\n\n    // Cuando el formulario es enviado\n    const submitNuevaCita = e => {\n        e.preventDefault();\n\n        // Validar el formulario\n\n        if( mascota.trim() === '' || propietario.trim() === '' || fecha.trim() === '' || hora.trim() === '' || sintomas.trim() === '' ) {\n            validarFormulario(true);\n            return;\n        }\n\n        validarFormulario(false);\n\n\n        // Crear la nueva cita\n        agregarNuevaCita({\n            id: uuid(),\n            mascota,\n            propietario,\n            fecha,\n            hora,\n            sintomas\n        })\n\n\n        // Reiniciar el formulario\n        guardarMascota('');\n        guardarPropietario('');\n        guardarFecha('');\n        guardarHora('');\n        guardarSintomas('');\n    }\n\n    return ( \n        <div className=\"card mt-5\">\n            <div className=\"card-body\">\n                <h2 className=\"card-title text-center mb-5\">Agrega las citas aqui</h2>\n\n                <form onSubmit={submitNuevaCita}>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre Mascota</label>\n                        <div className=\"col-sm-8 col-lg-10\">\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Nombre Mascota\" \n                                value={mascota}\n                                onChange={ e => guardarMascota(e.target.value) }\n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre Dueño</label>\n                        <div className=\"col-sm-8 col-lg-10\">\n                            <input \n                                type=\"text\" \n                                className=\"form-control\"  \n                                placeholder=\"Nombre Dueño de la Mascota\"\n                                value={propietario}\n                                onChange={ e => guardarPropietario(e.target.value) }\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Fecha</label>\n                        <div className=\"col-sm-8 col-lg-4  mb-4 mb-lg-0\">\n                            <input \n                                type=\"date\" \n                                className=\"form-control\"\n                                value={fecha}\n                                onChange={ e => guardarFecha(e.target.value) }\n                            />\n                        </div>                            \n\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Hora</label>\n                        <div className=\"col-sm-8 col-lg-4\">\n                            <input \n                                type=\"time\" \n                                className=\"form-control\" \n                                value={hora}\n                                onChange={ e => guardarHora(e.target.value) }\n                            />\n                        </div>\n                    </div>\n                    \n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Sintomas</label>\n                        <div className=\"col-sm-8 col-lg-10\">\n                            <textarea \n                                className=\"form-control\"\n                                value={sintomas}\n                                onChange={ e => guardarSintomas(e.target.value) }\n                            ></textarea>\n                        </div>\n                    </div>\n                    <div className=\"form-group row justify-content-end\">\n                        <div className=\"col-sm-3\">\n                            <button type=\"submit\" className=\"btn btn-success w-100\">Agregar</button>\n                        </div>\n                    </div>\n                </form>\n\n                { error.error  ? <div className=\"alert alert-danger text-center p2\">Todos los campos son obligatorios</div> : null}\n            </div>\n    </div>\n    );\n}\n \nexport default AgregarCita;\n","export const validarFormularioAction = estado => {\n    return {\n        type: 'VALIDAR_FORMULARIO',\n        payload: estado\n    }\n}","export const agregarCitaAction = cita => {\n    return {\n        type: 'AGREGAR_CITA',\n        payload: cita\n    }\n}\n\nexport const borrarCitaAction = id => {\n    return {\n        type: 'BORRAR_CITA',\n        payload: id\n    }\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { borrarCitaAction } from '../actions/citasActions';\n\nconst ListadoCitas = () => {\n\n    // obtener las citas del state\n    const citas =  useSelector((state) => state.citas);\n\n    // Mensaje condicional\n    const mensaje = Object.keys(citas.citas).length === 0 ? 'No Hay Citas' : 'Administra las Citas aquí';\n\n    // Dispatch para mandar llamar la acción de eliminar\n    const dispatch = useDispatch();\n\n    return ( \n        <div className=\"card mt-5\">\n            <div className=\"card-body\">\n                <h2 className=\"card-title text-center\">{mensaje}</h2>\n\n                <div className=\"lista-citas\">\n                    {citas.citas.map(cita => (\n                        <div key={cita.id} className=\"media mt-3\">\n                            <div className=\"media-body\">\n                                <h3 className=\"mt-0\">{cita.mascota}</h3>\n                                <p className=\"card-text\"><span>Nombre Dueño: </span>     {cita.propietario}</p>\n                                <p className=\"card-text\"><span>Fecha:</span> {cita.fecha}</p>\n                                <p className=\"card-text\"><span>Hora:</span> {cita.hora} </p>\n                                <p className=\"card-text\"><span>Sintomas: </span> <br /> \n                                {cita.sintomas}\n                                </p>\n                                <button \n                                    className=\"btn btn-danger\"\n                                    onClick={() => dispatch(borrarCitaAction(cita.id))}\n                                >\n                                        Borrar &times;\n                                </button>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n\n    );\n}\n \nexport default ListadoCitas;","const initialState = {\n    citas: []\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case 'AGREGAR_CITA': \n            return {\n                ...state,\n                citas: [...state.citas, action.payload]\n            }\n        case 'BORRAR_CITA':\n            return {\n                ...state,\n                citas: state.citas.filter(cita => cita.id !== action.payload)\n            }\n        default:\n            return state;\n    }\n}","const initialState = {\n    error: false\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n        case 'VALIDAR_FORMULARIO': \n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux'; \nimport citasReducer from './citasReducer';\nimport validacionReducer from './validacionReducer';\n\nexport default combineReducers({\n    citas: citasReducer,\n    error: validacionReducer\n});","import { createStore } from 'redux';\nimport reducer from './reducers';\nimport { obtenerStateStorage,  guardarStateStorage } from './localstorage';\n\n// Definir state inicial\n// const initialState = [];\n\n// Obtener citas de localstorage\nconst storageState =  obtenerStateStorage();\n\nconst store = createStore(\n    reducer, \n    storageState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe( () => {\n    guardarStateStorage({\n        citas: store.getState().citas\n    })\n} )\n\nexport default store;","export const obtenerStateStorage = () => {\n    const citasStorage = localStorage.getItem('citas');\n    if(citasStorage === null) {\n        return undefined\n    }\n    return JSON.parse(citasStorage);\n}\n\nexport const guardarStateStorage = state => {\n    const citasState = JSON.stringify(state);\n    localStorage.setItem('citas', citasState);\n}","import React from 'react';\nimport AgregarCita from './componentes/AgregarCita';\nimport ListadoCitas from './componentes/ListadoCitas';\n\n// Redux\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"container\">\n          <header>\n              <h1 className=\"text-center\">Administrador de Pacientes de Veterinaria</h1>\n          </header>\n\n          <div className=\"row mt-3\">\n              <div className=\"col-md-6\">\n                  <AgregarCita />\n              </div>\n              <div className=\"col-md-6\">\n                  <ListadoCitas />\n              </div>\n          </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}